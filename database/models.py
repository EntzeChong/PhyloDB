from django.db import models
from django_extensions.db.fields import UUIDField


class Project(models.Model):
    projectid = UUIDField(primary_key=True, editable=True)
    path = models.CharField(max_length=90)
    upload_date = models.DateField(max_length=45)
    project_name = models.CharField(max_length=90, blank=True)
    project_desc = models.TextField(blank=True)
    start_date = models.DateField(blank=True)
    end_date = models.DateField(blank=True)
    pi_last = models.CharField(max_length=45, blank=True)
    pi_first = models.CharField(max_length=45, blank=True)
    pi_affiliation = models.CharField(max_length=45, blank=True)
    pi_email = models.CharField(max_length=100, blank=True)
    pi_phone = models.CharField(max_length=15, blank=True)


class Sample(models.Model):
    sampleid = UUIDField(primary_key=True, editable=True)
    projectid = models.ForeignKey(Project)
    sample_name = models.CharField(max_length=45)
    organism = models.CharField(max_length=90, blank=True)
    title = models.TextField(blank=True)
    seq_method = models.CharField(max_length=45, blank=True)
    collection_date = models.DateField(blank=True)
    biome = models.CharField(max_length=45, blank=True)
    feature = models.CharField(max_length=45, blank=True)
    geo_loc = models.CharField(max_length=45, blank=True)
    lat_lon = models.CharField(max_length=45, blank=True)
    material = models.CharField(max_length=45, blank=True)
    depth = models.CharField(max_length=45, blank=True)
    elevation = models.CharField(max_length=45, blank=True)
    agrochem_addition = models.CharField(max_length=45, blank=True)
    al_sat = models.CharField(max_length=45, blank=True)
    al_sat_meth = models.CharField(max_length=45, blank=True)
    ammonium = models.CharField(max_length=45, blank=True)
    altitude = models.CharField(max_length=45, blank=True)
    annual_season_precpt = models.CharField(max_length=45, blank=True)
    annual_season_temp = models.CharField(max_length=45, blank=True)
    crop_rotation = models.CharField(max_length=45, blank=True)
    cur_land_use = models.CharField(max_length=45, blank=True)
    cur_vegetation = models.CharField(max_length=45, blank=True)
    cur_vegetation_meth = models.CharField(max_length=45, blank=True)
    drainage_class = models.CharField(max_length=45, blank=True)
    extreme_event = models.CharField(max_length=45, blank=True)
    extreme_salinity = models.CharField(max_length=45, blank=True)
    fao_class = models.CharField(max_length=45, blank=True)
    fire = models.CharField(max_length=45, blank=True)
    flooding = models.CharField(max_length=45, blank=True)
    heavy_metals = models.CharField(max_length=45, blank=True)
    heavy_metals_meth = models.CharField(max_length=45, blank=True)
    horizon = models.CharField(max_length=45, blank=True)
    horizon_meth = models.CharField(max_length=45, blank=True)
    link_addit_analys = models.CharField(max_length=45, blank=True)
    link_class_info = models.CharField(max_length=45, blank=True)
    link_climate_info = models.CharField(max_length=45, blank=True)
    local_class = models.CharField(max_length=45, blank=True)
    local_class_meth = models.CharField(max_length=45, blank=True)
    microbial_biomass = models.CharField(max_length=45, blank=True)
    microbial_biomass_meth = models.CharField(max_length=45, blank=True)
    other = models.CharField(max_length=45, blank=True)
    pH = models.CharField(max_length=45, blank=True)
    pH_meth = models.CharField(max_length=45, blank=True)
    pool_dna_extracts = models.CharField(max_length=45, blank=True)
    previous_land_use = models.CharField(max_length=45, blank=True)
    previous_land_use_meth = models.CharField(max_length=45, blank=True)
    profile_position = models.CharField(max_length=45, blank=True)
    rel_to_oxygen = models.CharField(max_length=45, blank=True)
    salinity_meth = models.CharField(max_length=45, blank=True)
    samp_collect_device = models.CharField(max_length=45, blank=True)
    samp_mat_process = models.CharField(max_length=45, blank=True)
    samp_size = models.CharField(max_length=45, blank=True)
    samp_weight_dna_ext = models.CharField(max_length=45, blank=True)
    sieving = models.CharField(max_length=45, blank=True)
    slope_aspect = models.CharField(max_length=45, blank=True)
    slope_gradient = models.CharField(max_length=45, blank=True)
    soil_type = models.CharField(max_length=45, blank=True)
    soil_type_meth = models.CharField(max_length=45, blank=True)
    store_cond = models.CharField(max_length=45, blank=True)
    texture = models.CharField(max_length=45, blank=True)
    texture_meth = models.CharField(max_length=45, blank=True)
    tillage = models.CharField(max_length=45, blank=True)
    tot_n = models.CharField(max_length=45, blank=True)
    tot_n_meth = models.CharField(max_length=45, blank=True)
    tot_org_c_meth = models.CharField(max_length=45, blank=True)
    tot_org_carb = models.CharField(max_length=45, blank=True)
    water_content_soil = models.CharField(max_length=45, blank=True)
    water_content_soil_meth = models.CharField(max_length=45, blank=True)
    user_trt1 = models.CharField(max_length=45, blank=True)
    user_trt2 = models.CharField(max_length=45, blank=True)
    user_trt3 = models.CharField(max_length=45, blank=True)
    user_trt4 = models.CharField(max_length=45, blank=True)
    user_trt5 = models.CharField(max_length=45, blank=True)
    user_trt6 = models.CharField(max_length=45, blank=True)


class Kingdom(models.Model):
    kingdomid = UUIDField(primary_key=True, editable=True)
    kingdomName = models.CharField(max_length=90, blank=True)


class Phyla(models.Model):
    kingdomid = models.ForeignKey(Kingdom)
    phylaid = UUIDField(primary_key=True, editable=True)
    phylaName = models.CharField(max_length=90, blank=True)


class Class(models.Model):
    kingdomid = models.ForeignKey(Kingdom)
    phylaid = models.ForeignKey(Phyla)
    classid = UUIDField(primary_key=True, editable=True)
    className = models.CharField(max_length=90, blank=True)


class Order(models.Model):
    kingdomid = models.ForeignKey(Kingdom)
    phylaid = models.ForeignKey(Phyla)
    classid = models.ForeignKey(Class)
    orderid = UUIDField(primary_key=True, editable=True)
    orderName = models.CharField(max_length=90, blank=True)


class Family(models.Model):
    kingdomid = models.ForeignKey(Kingdom)
    phylaid = models.ForeignKey(Phyla)
    classid = models.ForeignKey(Class)
    orderid = models.ForeignKey(Order)
    familyid = UUIDField(primary_key=True, editable=True)
    familyName = models.CharField(max_length=90, blank=True)


class Genus(models.Model):
    kingdomid = models.ForeignKey(Kingdom)
    phylaid = models.ForeignKey(Phyla)
    classid = models.ForeignKey(Class)
    orderid = models.ForeignKey(Order)
    familyid = models.ForeignKey(Family)
    genusid = UUIDField(primary_key=True, editable=True)
    genusName = models.CharField(max_length=90, blank=True)


class Species(models.Model):
    kingdomid = models.ForeignKey(Kingdom)
    phylaid = models.ForeignKey(Phyla)
    classid = models.ForeignKey(Class)
    orderid = models.ForeignKey(Order)
    familyid = models.ForeignKey(Family)
    genusid = models.ForeignKey(Genus)
    speciesid = UUIDField(primary_key=True, editable=True)
    speciesName = models.CharField(max_length=90, blank=True)


class Profile(models.Model):
    projectid = models.ForeignKey(Project)
    sampleid = models.ForeignKey(Sample)
    kingdomid = models.ForeignKey(Kingdom)
    phylaid = models.ForeignKey(Phyla)
    classid = models.ForeignKey(Class)
    orderid = models.ForeignKey(Order)
    familyid = models.ForeignKey(Family)
    genusid = models.ForeignKey(Genus)
    speciesid = models.ForeignKey(Species)
    count = models.IntegerField()
